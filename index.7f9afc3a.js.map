{"mappings":"A,S,E,C,C,C,C,C,C,C,C,C,C,C,C,C,E,G,C,I,E,C,C,E,C,G,E,E,K,A,C,M,E,C,E,G,M,C,E,I,C,E,G,Q,O,C,G,I,C,E,E,C,S,E,C,E,O,W,I,E,I,C,E,U,O,I,Q,S,C,C,C,E,I,E,E,K,C,E,G,S,E,C,E,E,E,E,E,E,E,O,E,C,S,E,C,E,E,E,E,E,E,E,Q,E,C,E,K,E,E,C,C,S,E,C,C,C,E,I,E,E,E,E,E,C,M,E,K,W,G,A,E,C,C,E,C,M,C,C,E,C,O,C,C,E,A,E,K,E,C,I,E,A,E,O,E,C,K,E,G,M,E,G,O,E,E,E,A,Y,O,Q,C,C,C,O,Q,C,C,W,O,I,A,C,E,E,S,E,C,E,O,S,C,E,O,A,S,C,E,G,E,M,A,U,mC,K,G,G,C,G,E,E,G,C,E,A,E,C,C,E,C,E,M,C,C,C,E,C,E,K,E,C,A,C,E,E,M,A,G,E,I,C,G,C,E,E,I,A,G,C,A,C,E,E,I,C,E,C,C,E,C,E,I,C,O,E,O,E,E,A,G,C,E,C,A,E,C,C,E,C,E,K,C,A,E,C,C,E,E,K,E,K,E,E,E,K,M,E,O,E,K,G,C,M,C,C,E,C,K,C,C,C,M,E,E,K,G,E,C,C,E,C,E,C,E,C,Q,M,E,E,E,G,C,G,G,E,I,C,G,G,Q,S,G,C,C,E,A,C,E,E,I,A,E,M,C,G,C,C,E,M,C,E,A,G,C,A,I,C,C,E,E,A,I,C,C,E,A,E,C,E,E,Q,C,G,A,I,C,C,E,E,C,C,G,C,C,E,C,C,C,E,E,C,C,E,C,C,C,E,A,E,C,E,K,C,C,C,E,C,K,C,G,A,I,C,C,E,E,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,E,K,C,G,G,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,G,C,I,C,G,K,C,C,C,E,E,E,G,C,G,G,E,I,C,G,G,Q,C,E,E,I,C,E,E,C,M,E,C,E,C,E,E,C,E,C,Q,C,E,E,C,C,G,A,E,C,C,E,C,M,C,C,E,C,M,C,M,C,C,E,C,C,C,E,C,K,E,K,C,C,C,E,C,E,E,C,C,C,CCEA,IAIiB,EAcA,EAlBX,EAAO,SAAS,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAC/C,EAAO,SAAS,sBAAsB,CAAC,OAAO,CAAC,EAAE,CACjD,EAAM,SAAS,aAAa,CAAC,OAE7B,GAAW,EAAA,EAAA,W,O,E,I,C,S,C,EACf,GAAI,CACF,EAAI,SAAS,CAAC,GAAG,CAAC,WAClB,EAAI,WAAW,CAAG,uBACpB,CAAE,MAAA,EAAM,CACN,EAAI,SAAS,CAAC,GAAG,CAAC,WAClB,EAAI,SAAS,CAAC,GAAG,CAAC,iBAElB,EAAI,WAAW,CAAG,uBACpB,QAAU,CACR,EAAK,WAAW,CAAC,EACnB,C,M,C,E,A,EACF,GAZM,W,O,E,K,C,I,C,U,GAcA,GAAW,EAAA,EAAA,W,O,E,I,C,S,C,EACf,GAAI,CACF,MAAM,AAAI,OACZ,CAAE,MAAA,EAAM,CACN,WAAW,WACT,EAAI,SAAS,CAAC,GAAG,CAAC,WAClB,EAAI,SAAS,CAAC,GAAG,CAAC,iBAElB,EAAI,WAAW,CAAG,wBAClB,EAAK,WAAW,CAAC,EACnB,EAAG,IACL,C,M,C,E,A,EACF,GAZM,W,O,E,K,C,I,C,U,GAcN,EAAK,gBAAgB,CAAC,QAAS,WAC7B,IACA,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar body = document.getElementsByTagName(\"body\")[0];\nvar logo = document.getElementsByClassName(\"logo\")[0];\nvar div = document.createElement(\"div\");\nvar promise1 = function() {\n    var _ref = _async_to_generator(function() {\n        return _ts_generator(this, function(_state) {\n            try {\n                div.classList.add(\"message\");\n                div.textContent = \"Promise was resolved!\";\n            } catch (e) {\n                div.classList.add(\"message\");\n                div.classList.add(\"error-message\");\n                div.textContent = \"Promise was rejected!\";\n            } finally{\n                body.appendChild(div);\n            }\n            return [\n                2\n            ];\n        });\n    });\n    return function promise1() {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar promise2 = function() {\n    var _ref = _async_to_generator(function() {\n        return _ts_generator(this, function(_state) {\n            try {\n                throw new Error();\n            } catch (e) {\n                setTimeout(function() {\n                    div.classList.add(\"message\");\n                    div.classList.add(\"error-message\");\n                    div.textContent = \"Promise was rejected!\";\n                    body.appendChild(div);\n                }, 3000);\n            }\n            return [\n                2\n            ];\n        });\n    });\n    return function promise2() {\n        return _ref.apply(this, arguments);\n    };\n}();\nlogo.addEventListener(\"click\", function() {\n    promise1();\n    promise2();\n});\n\n//# sourceMappingURL=index.7f9afc3a.js.map\n","'use strict';\n\nconst body = document.getElementsByTagName('body')[0];\nconst logo = document.getElementsByClassName('logo')[0];\nconst div = document.createElement('div');\n\nconst promise1 = async () => {\n  try {\n    div.classList.add('message');\n    div.textContent = 'Promise was resolved!';\n  } catch {\n    div.classList.add('message');\n    div.classList.add('error-message');\n\n    div.textContent = 'Promise was rejected!';\n  } finally {\n    body.appendChild(div);\n  }\n};\n\nconst promise2 = async () => {\n  try {\n    throw new Error();\n  } catch {\n    setTimeout(() => {\n      div.classList.add('message');\n      div.classList.add('error-message');\n\n      div.textContent = 'Promise was rejected!';\n      body.appendChild(div);\n    }, 3000);\n  }\n};\n\nlogo.addEventListener('click', () => {\n  promise1();\n  promise2();\n});\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_async_to_generator","fn","self","args","arguments","apply","err","undefined","_ts_generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","pop","length","push","e","_ref","document","getElementsByTagName","logo","getElementsByClassName","div","createElement","promise1","_state","classList","add","textContent","appendChild","promise2","Error","setTimeout","addEventListener"],"version":3,"file":"index.7f9afc3a.js.map"}